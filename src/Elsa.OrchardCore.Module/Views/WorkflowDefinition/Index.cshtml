@model WorkflowDefinitionIndexViewModel

@{
    var startIndex = (Model.Pager.Page - 1) * (Model.Pager.PageSize) + 1;
    var endIndex = startIndex + Model.WorkflowDefinitions.Count - 1;
}
<script asp-name="bootstrap-select" depends-on="admin" at="Foot"></script>

<zone Name="Title"><h1>@RenderTitleSegments(T["Manage Workflows"])</h1></zone>

<form asp-action="Index" id="workflows-types-form" method="post" class="no-multisubmit">
    <input type="submit" name="submit.Filter" id="submitFilter" class="visually-hidden" />
    <input type="submit" name="submit.BulkAction" class="visually-hidden" />
    <input asp-for="Options.BulkAction" type="hidden" />

    <div class="card bg-primary mb-3 position-sticky action-bar">
        <div class="card-body">
            <div class="row gx-3">
                <div class="col">
                    <div class="has-search">
                        <i class="fa fa-search form-control-feedback" aria-hidden="true"></i>
                        <input asp-for="Options.Search" class="form-control" placeholder="@T["Search"]" type="search" autofocus />
                    </div>
                </div>
                <div class="col-auto">
                    <a asp-action="Index" asp-controller="WorkflowStudio" asp-route-returnUrl="@FullRequestPath" class="btn btn-secondary create" role="button">@T["Create Workflow"]</a>
                </div>
            </div>
        </div>
    </div>
    <ul class="list-group with-checkbox">
        @if (Model.WorkflowDefinitions.Count > 0)
        {
            <li class="list-group-item bg-primary">
                <div class="row gx-3">
                    <div class="col text-nowrap">
                        <div class="form-check my-1">
                            <input type="checkbox" class="form-check-input" id="select-all">
                            <label class="form-check-label" for="select-all" id="select-all-label" title="@T["Select All"]"></label>
                            <label id="items" for="select-all">@T.Plural(Model.WorkflowDefinitions.Count, "1 item", "{0} items")<span class="text-muted" title="@T["Items {0} to {1}", startIndex, endIndex]">@T.Plural((int)Model.Pager.TotalItemCount, " / {0} item in total", " / {0} items in total")</span></label>
                            <label id="selected-items" class="text-muted" for="select-all"></label>
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="dropdown" style="display:none" id="actions">
                            <button class="btn btn-sm btn-light dropdown-toggle" type="button" id="bulk-action-menu-button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @T["Actions"]
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="bulk-action-menu-button">
                                @foreach (var item in Model.Options.WorkflowDefinitionsBulkAction)
                                {
                                    <li><a class="dropdown-item" href="javascript:void(0)" data-action="@item.Value" data-title="@T["Bulk Action"]" data-message="@T["Are you sure you want to {0} these items?", @item.Text.ToLower()]">@item.Text</a></li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </li>
            @for (var i = 0; i < Model.WorkflowDefinitions.Count; i++)
            {
                var entry = Model.WorkflowDefinitions[i];
                <li class="list-group-item">
                    <div class="properties">
                        <div class="float-end">
                            <a asp-action="Index" asp-controller="WorkflowStudio" asp-route-id="@entry.WorkflowDefinitionSummary.DefinitionId" asp-route-returnUrl="@FullRequestPath" class="btn btn-primary btn-sm">@T["Edit"]</a>
                            <a asp-action="Delete" asp-route-id="@entry.WorkflowDefinitionSummary.DefinitionId" class="btn btn-danger btn-sm" data-url-af="RemoveUrl UnsafeUrl">@T["Delete"]</a>
                        </div>

                        <div class="form-check float-start">
                            <input type="checkbox" class="form-check-input" value="@entry.Id" name="itemIds" id="itemIds-@entry.Id">
                            <label class="form-check-label" for="itemIds-@entry.Id"></label>
                        </div>
                        <a asp-action="Index" asp-route-id="@entry.WorkflowDefinitionSummary.DefinitionId" asp-route-returnUrl="@FullRequestPath">@entry.Name</a>
                        
                        @if (entry.WorkflowInstanceCount > 0)
                        {
                            <a asp-action="Index" asp-controller="WorkflowInstance" asp-route-definitionid="@entry.WorkflowDefinitionSummary.DefinitionId" class="badge ta-badge"><i class="fa fa-list-ol" aria-hidden="true"></i> @T.Plural(entry.WorkflowInstanceCount, "1 instance", "{0} instances")</a>
                        }

                        <div class="metadata">
                        </div>
                    </div>
                </li>
            }
        }
        else
        {
            <li class="list-group-item">
                <div class="alert alert-info mb-0" role="alert">
                    @T["<strong>Nothing here!</strong> There are no workflows for the moment."]
                </div>
            </li>
        }
    </ul>
</form>
@await DisplayAsync(Model.Pager)

<script at="Foot">
    $(function () {
        $('select').selectpicker();

        var actions = $("#actions");
        var items = $("#items");
        var filters = $(".filter");
        var selectAllCtrl = $("#select-all");
        var selectedItems = $("#selected-items");
        var itemsCheckboxes = $(":checkbox[name='itemIds']");

        $(".filter-options input").on("change", function () {
            $("[name='submit.Filter']").click();
        });

        $(".dropdown-menu .dropdown-item").filter(function () {
            return $(this).data("action");
        }).on("click", function () {
            if ($(":checkbox[name='itemIds']:checked").length > 1) {
                var $this = $(this);
                confirmDialog({
                    title: $this.data('title'), message: $this.data('message'), callback: function (r) {
                        if (r) {
                            $("[name='Options.BulkAction']").val($this.data("action"));
                            $("[name='submit.BulkAction']").click();
                        }
                    }
                });
            }
        });

        function displayActionsOrFilters() {
            if ($(":checkbox[name='itemIds']:checked").length > 1) {
                actions.show();
                filters.hide();
                selectedItems.show();
                items.hide();
            }
            else {
                actions.hide();
                filters.show();
                selectedItems.hide();
                items.show();
            }
        }

        selectAllCtrl.click(function () {
            itemsCheckboxes.not(this).prop("checked", this.checked);
            selectedItems.text($(":checkbox[name='itemIds']:checked").length + ' @T["selected"]');
            displayActionsOrFilters();
        });

        itemsCheckboxes.on("click", function () {
            var itemsCount = $(":checkbox[name='itemIds']").length;
            var selectedItemsCount = $(":checkbox[name='itemIds']:checked").length;

            selectAllCtrl.prop("checked", selectedItemsCount == itemsCount);
            selectAllCtrl.prop("indeterminate", selectedItemsCount > 0 && selectedItemsCount < itemsCount);

            selectedItems.text(selectedItemsCount + ' @T["selected"]');
            displayActionsOrFilters();
        });
    });
</script>
